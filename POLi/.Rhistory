shiny::runApp()
rsconnect::deployApp(appDir="C:/Users/ttiet/Desktop/pol_app/POLi",logLevel="verbose",lint=TRUE)
rsconnect::deployApp(appDir="C:/Users/ttiet/Desktop/pol_app/POLi",logLevel="verbose",lint=TRUE)
rsconnect::deployApp(appDir="C:/Users/ttiet/Desktop/pol_app/POLi",logLevel="verbose",lint=TRUE)
options(rsconnect.max.bundle.size=1000000000)
rsconnect::deployApp(appDir="C:/Users/ttiet/Desktop/pol_app/POLi",logLevel="verbose",lint=TRUE)
rsconnect::showLogs()
runApp()
shiny::runApp()
?rsconnect::rsconnectOptions
file.edit(".Rprofile")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
tensorflow::tf$Session()
runApp()
runApp()
runApp()
k_get_session()
tf$compat$v1$keras$backend$get_session()
sess <- tf$Session()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("Shinyjs")
install.packages("shinyjs")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
tfsess <- tf$compat$v1$keras$backend$get_session()
library(tidyverse)
library(plotly)
library(shiny)
library(tfdeploy)
library(keras)
library(tensorflow)
library(shinyjs)
tfsess <- tf$compat$v1$keras$backend$get_session()
tf$compat$v1$keras$backend$set_session(tfsess)
graph <- load_savedmodel(sess,"www/savedmodel")
graph <- load_savedmodel(tfsess,"www/savedmodel")
graph <- load_savedmodel(tfsess,"www/savedmodel")
gc()
tfsess <- tf$compat$v1$keras$backend$get_session()
tf$compat$v1$keras$backend$set_session(tfsess)
graph <- load_savedmodel(tfsess,"www/savedmodel")
runApp()
runApp()
k_get_session()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(tidyverse)
library(plotly)
library(shiny)
library(tfdeploy)
library(keras)
library(shinyjs)
k_set_session()
tfsess <-tf$compat$v1$keras$backend$set_session()
library(tidyverse)
library(plotly)
library(shiny)
library(tfdeploy)
library(keras)
library(shinyjs)
tfsess <-tf$compat$v1$keras$backend$set_session()
tfsess <- tf$compat$v1$keras$backend$set_session()
runApp()
runApp()
tfsess <- tf$compat$v1$keras$backend$set_session()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
